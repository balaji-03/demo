PyStatements cannot be a part of an expression, 
so list and other comprehensions or lambda expressions, 
all being expressions, cannot contain statements.
A particular case of this is that an assignment statement such as a = 1 cannot form part of the conditional expression of a conditional statement.
This has the advantage of avoiding a classic C error of mistaking an assignment operator = for an equality operator == in conditions: 
if (c = 1) { ... } is syntactically valid (but probably unintended) C code but if c = 1: ... causes a syntax error in Python.
Statements cannot be a part of an expression,
so list and other comprehensions or lambda expressions, all being expressions, cannot contain statements. 
A particular case of this is that an assignment statement such as a = 1 cannot form part of the conditional expression of a conditional statement.
This has the advantage of avoiding a classic C error of mistaking an assignment operator = for an equality operator == in conditions: if (c = 1) { ... }
is syntactically valid (but probably unintended) C code but if c = 1: ... causes a syntax error in Python.
MethodsStatements cannot be a part of an expression, so list and other comprehensions or lambda expressions, all being expressions, cannot contain statements. 
A particular case of this is that an assignment statement such as a = 1 cannot form part of the conditional expression of a conditional statement. 
This has the advantage of avoiding a classic C error of mistaking an assignment operator = for an equality operator == in conditions: 
if (c = 1) { ... } is syntactically valid (but probably unintended) C code but if c = 1: ... causes a syntax error in Python.
Methodsthon is meant to be an easily readable language. 
Its formatting is visually uncluttered, and it often uses English 
keywords where other languages use punctuation. Unlike many other languages, 
it does not use curly brackets to delimit blocks, and semicolons after statements are allowed but are rarely, if ever, used. 
It has fewer syntactic exceptions and special cases than C or Pascal